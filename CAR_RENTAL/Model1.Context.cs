//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAR_RENTAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CarRentalSalonEntities : DbContext
    {
        public CarRentalSalonEntities()
            : base("name=CarRentalSalonEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdditionalService> AdditionalServices { get; set; }
        public virtual DbSet<AdditionalServicesOnOrder> AdditionalServicesOnOrders { get; set; }
        public virtual DbSet<CatalogCar> CatalogCars { get; set; }
        public virtual DbSet<ClassCar> ClassCars { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<CountryCar> CountryCars { get; set; }
        public virtual DbSet<Driver> Drivers { get; set; }
        public virtual DbSet<Fine> Fines { get; set; }
        public virtual DbSet<NameFine> NameFines { get; set; }
        public virtual DbSet<RentalCar> RentalCars { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<StatusAdditionalPaymentRentalCar> StatusAdditionalPaymentRentalCars { get; set; }
        public virtual DbSet<StatusCatalogCar> StatusCatalogCars { get; set; }
        public virtual DbSet<StatusPaymentRentalCar> StatusPaymentRentalCars { get; set; }
        public virtual DbSet<StatusRentalCar> StatusRentalCars { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TypeCarDamage> TypeCarDamages { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<ReturnCarHaveDamage> ReturnCarHaveDamages { get; set; }
    
        [DbFunction("CarRentalSalonEntities", "fc_CheckBusyCar")]
        public virtual IQueryable<fc_CheckBusyCar_Result> fc_CheckBusyCar(Nullable<System.DateTime> dateNow, Nullable<int> catalogCarId)
        {
            var dateNowParameter = dateNow.HasValue ?
                new ObjectParameter("DateNow", dateNow) :
                new ObjectParameter("DateNow", typeof(System.DateTime));
    
            var catalogCarIdParameter = catalogCarId.HasValue ?
                new ObjectParameter("CatalogCarId", catalogCarId) :
                new ObjectParameter("CatalogCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_CheckBusyCar_Result>("[CarRentalSalonEntities].[fc_CheckBusyCar](@DateNow, @CatalogCarId)", dateNowParameter, catalogCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_CheckBusyDriver")]
        public virtual IQueryable<fc_CheckBusyDriver_Result> fc_CheckBusyDriver(Nullable<System.DateTime> dateNow, Nullable<int> driverId)
        {
            var dateNowParameter = dateNow.HasValue ?
                new ObjectParameter("DateNow", dateNow) :
                new ObjectParameter("DateNow", typeof(System.DateTime));
    
            var driverIdParameter = driverId.HasValue ?
                new ObjectParameter("DriverId", driverId) :
                new ObjectParameter("DriverId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_CheckBusyDriver_Result>("[CarRentalSalonEntities].[fc_CheckBusyDriver](@DateNow, @DriverId)", dateNowParameter, driverIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_FashionAdditionalService")]
        public virtual IQueryable<fc_FashionAdditionalService_Result> fc_FashionAdditionalService()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_FashionAdditionalService_Result>("[CarRentalSalonEntities].[fc_FashionAdditionalService]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_FashionCar")]
        public virtual IQueryable<fc_FashionCar_Result> fc_FashionCar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_FashionCar_Result>("[CarRentalSalonEntities].[fc_FashionCar]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_FashionDriver")]
        public virtual IQueryable<fc_FashionDriver_Result> fc_FashionDriver()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_FashionDriver_Result>("[CarRentalSalonEntities].[fc_FashionDriver]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_FashionFine")]
        public virtual IQueryable<fc_FashionFine_Result> fc_FashionFine()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_FashionFine_Result>("[CarRentalSalonEntities].[fc_FashionFine]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_GetDataRentalCarAdditionalServicesForPrint")]
        public virtual IQueryable<fc_GetDataRentalCarAdditionalServicesForPrint_Result> fc_GetDataRentalCarAdditionalServicesForPrint(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_GetDataRentalCarAdditionalServicesForPrint_Result>("[CarRentalSalonEntities].[fc_GetDataRentalCarAdditionalServicesForPrint](@RentalCarId)", rentalCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_GetDataRentalCarForPrint")]
        public virtual IQueryable<fc_GetDataRentalCarForPrint_Result> fc_GetDataRentalCarForPrint(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_GetDataRentalCarForPrint_Result>("[CarRentalSalonEntities].[fc_GetDataRentalCarForPrint](@RentalCarId)", rentalCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_GetDataRentalCarItogSumAdditionalServicesForPrint")]
        public virtual IQueryable<fc_GetDataRentalCarItogSumAdditionalServicesForPrint_Result> fc_GetDataRentalCarItogSumAdditionalServicesForPrint(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_GetDataRentalCarItogSumAdditionalServicesForPrint_Result>("[CarRentalSalonEntities].[fc_GetDataRentalCarItogSumAdditionalServicesForPrint](@RentalCarId)", rentalCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_GetFullPriceDamageOnRentalCar")]
        public virtual IQueryable<fc_GetFullPriceDamageOnRentalCar_Result> fc_GetFullPriceDamageOnRentalCar(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_GetFullPriceDamageOnRentalCar_Result>("[CarRentalSalonEntities].[fc_GetFullPriceDamageOnRentalCar](@RentalCarId)", rentalCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_GetFullPriceFineOnRentalCar")]
        public virtual IQueryable<fc_GetFullPriceFineOnRentalCar_Result> fc_GetFullPriceFineOnRentalCar(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_GetFullPriceFineOnRentalCar_Result>("[CarRentalSalonEntities].[fc_GetFullPriceFineOnRentalCar](@RentalCarId)", rentalCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_GetMaxId")]
        public virtual IQueryable<fc_GetMaxId_Result> fc_GetMaxId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_GetMaxId_Result>("[CarRentalSalonEntities].[fc_GetMaxId]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputAdditionalServices")]
        public virtual IQueryable<fc_OutputAdditionalServices_Result> fc_OutputAdditionalServices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputAdditionalServices_Result>("[CarRentalSalonEntities].[fc_OutputAdditionalServices]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputAdditionalServicesOneRentalCar")]
        public virtual IQueryable<fc_OutputAdditionalServicesOneRentalCar_Result> fc_OutputAdditionalServicesOneRentalCar(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputAdditionalServicesOneRentalCar_Result>("[CarRentalSalonEntities].[fc_OutputAdditionalServicesOneRentalCar](@RentalCarId)", rentalCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputBrand")]
        public virtual IQueryable<fc_OutputBrand_Result> fc_OutputBrand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputBrand_Result>("[CarRentalSalonEntities].[fc_OutputBrand]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputBrandForInsertFine")]
        public virtual IQueryable<fc_OutputBrandForInsertFine_Result> fc_OutputBrandForInsertFine(Nullable<System.DateTime> fineReceiptDate, string intruderFullName)
        {
            var fineReceiptDateParameter = fineReceiptDate.HasValue ?
                new ObjectParameter("FineReceiptDate", fineReceiptDate) :
                new ObjectParameter("FineReceiptDate", typeof(System.DateTime));
    
            var intruderFullNameParameter = intruderFullName != null ?
                new ObjectParameter("IntruderFullName", intruderFullName) :
                new ObjectParameter("IntruderFullName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputBrandForInsertFine_Result>("[CarRentalSalonEntities].[fc_OutputBrandForInsertFine](@FineReceiptDate, @IntruderFullName)", fineReceiptDateParameter, intruderFullNameParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputBusyCarStatus")]
        public virtual IQueryable<fc_OutputBusyCarStatus_Result> fc_OutputBusyCarStatus(Nullable<int> catalogCarId)
        {
            var catalogCarIdParameter = catalogCarId.HasValue ?
                new ObjectParameter("CatalogCarId", catalogCarId) :
                new ObjectParameter("CatalogCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputBusyCarStatus_Result>("[CarRentalSalonEntities].[fc_OutputBusyCarStatus](@CatalogCarId)", catalogCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputCatalogCarIdAndBrandAndModelAndPricePerDay")]
        public virtual IQueryable<fc_OutputCatalogCarIdAndBrandAndModelAndPricePerDay_Result> fc_OutputCatalogCarIdAndBrandAndModelAndPricePerDay()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputCatalogCarIdAndBrandAndModelAndPricePerDay_Result>("[CarRentalSalonEntities].[fc_OutputCatalogCarIdAndBrandAndModelAndPricePerDay]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputClass")]
        public virtual IQueryable<fc_OutputClass_Result> fc_OutputClass()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputClass_Result>("[CarRentalSalonEntities].[fc_OutputClass]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputClient")]
        public virtual IQueryable<fc_OutputClient_Result> fc_OutputClient(string search, string searchPassport)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var searchPassportParameter = searchPassport != null ?
                new ObjectParameter("SearchPassport", searchPassport) :
                new ObjectParameter("SearchPassport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputClient_Result>("[CarRentalSalonEntities].[fc_OutputClient](@Search, @SearchPassport)", searchParameter, searchPassportParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputClientAndPassportNumberAndDriverLicense")]
        public virtual IQueryable<fc_OutputClientAndPassportNumberAndDriverLicense_Result> fc_OutputClientAndPassportNumberAndDriverLicense()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputClientAndPassportNumberAndDriverLicense_Result>("[CarRentalSalonEntities].[fc_OutputClientAndPassportNumberAndDriverLicense]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputCountry")]
        public virtual IQueryable<fc_OutputCountry_Result> fc_OutputCountry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputCountry_Result>("[CarRentalSalonEntities].[fc_OutputCountry]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputDriver")]
        public virtual IQueryable<fc_OutputDriver_Result> fc_OutputDriver()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputDriver_Result>("[CarRentalSalonEntities].[fc_OutputDriver]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputDriverOneRentalCar")]
        public virtual IQueryable<fc_OutputDriverOneRentalCar_Result> fc_OutputDriverOneRentalCar(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputDriverOneRentalCar_Result>("[CarRentalSalonEntities].[fc_OutputDriverOneRentalCar](@RentalCarId)", rentalCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputDriverWorkOfPeriodForPrint")]
        public virtual IQueryable<fc_OutputDriverWorkOfPeriodForPrint_Result> fc_OutputDriverWorkOfPeriodForPrint(Nullable<int> driverId, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var driverIdParameter = driverId.HasValue ?
                new ObjectParameter("DriverId", driverId) :
                new ObjectParameter("DriverId", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputDriverWorkOfPeriodForPrint_Result>("[CarRentalSalonEntities].[fc_OutputDriverWorkOfPeriodForPrint](@DriverId, @Start, @End)", driverIdParameter, startParameter, endParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputEmployees")]
        public virtual IQueryable<fc_OutputEmployees_Result> fc_OutputEmployees(string employeeFullName)
        {
            var employeeFullNameParameter = employeeFullName != null ?
                new ObjectParameter("EmployeeFullName", employeeFullName) :
                new ObjectParameter("EmployeeFullName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputEmployees_Result>("[CarRentalSalonEntities].[fc_OutputEmployees](@EmployeeFullName)", employeeFullNameParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputFineName")]
        public virtual IQueryable<fc_OutputFineName_Result> fc_OutputFineName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputFineName_Result>("[CarRentalSalonEntities].[fc_OutputFineName]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputFineOnRentalCarForPrint")]
        public virtual IQueryable<fc_OutputFineOnRentalCarForPrint_Result> fc_OutputFineOnRentalCarForPrint(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputFineOnRentalCarForPrint_Result>("[CarRentalSalonEntities].[fc_OutputFineOnRentalCarForPrint](@RentalCarId)", rentalCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputIntruderFullNameForInsertFine")]
        public virtual IQueryable<fc_OutputIntruderFullNameForInsertFine_Result> fc_OutputIntruderFullNameForInsertFine(Nullable<System.DateTime> fineReceiptDate)
        {
            var fineReceiptDateParameter = fineReceiptDate.HasValue ?
                new ObjectParameter("FineReceiptDate", fineReceiptDate) :
                new ObjectParameter("FineReceiptDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputIntruderFullNameForInsertFine_Result>("[CarRentalSalonEntities].[fc_OutputIntruderFullNameForInsertFine](@FineReceiptDate)", fineReceiptDateParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputLoginPassword")]
        public virtual IQueryable<fc_OutputLoginPassword_Result> fc_OutputLoginPassword(string userLogin)
        {
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputLoginPassword_Result>("[CarRentalSalonEntities].[fc_OutputLoginPassword](@UserLogin)", userLoginParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputModel")]
        public virtual IQueryable<fc_OutputModel_Result> fc_OutputModel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputModel_Result>("[CarRentalSalonEntities].[fc_OutputModel]()");
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputModelForInsertFine")]
        public virtual IQueryable<fc_OutputModelForInsertFine_Result> fc_OutputModelForInsertFine(Nullable<System.DateTime> fineReceiptDate, string intruderFullName, string catalogCarBrand)
        {
            var fineReceiptDateParameter = fineReceiptDate.HasValue ?
                new ObjectParameter("FineReceiptDate", fineReceiptDate) :
                new ObjectParameter("FineReceiptDate", typeof(System.DateTime));
    
            var intruderFullNameParameter = intruderFullName != null ?
                new ObjectParameter("IntruderFullName", intruderFullName) :
                new ObjectParameter("IntruderFullName", typeof(string));
    
            var catalogCarBrandParameter = catalogCarBrand != null ?
                new ObjectParameter("CatalogCarBrand", catalogCarBrand) :
                new ObjectParameter("CatalogCarBrand", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputModelForInsertFine_Result>("[CarRentalSalonEntities].[fc_OutputModelForInsertFine](@FineReceiptDate, @IntruderFullName, @CatalogCarBrand)", fineReceiptDateParameter, intruderFullNameParameter, catalogCarBrandParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputOneAdditionalService")]
        public virtual IQueryable<fc_OutputOneAdditionalService_Result> fc_OutputOneAdditionalService(Nullable<int> additionalServiceId)
        {
            var additionalServiceIdParameter = additionalServiceId.HasValue ?
                new ObjectParameter("AdditionalServiceId", additionalServiceId) :
                new ObjectParameter("AdditionalServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputOneAdditionalService_Result>("[CarRentalSalonEntities].[fc_OutputOneAdditionalService](@AdditionalServiceId)", additionalServiceIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputOneCar")]
        public virtual IQueryable<fc_OutputOneCar_Result> fc_OutputOneCar(Nullable<int> catalogCarId)
        {
            var catalogCarIdParameter = catalogCarId.HasValue ?
                new ObjectParameter("CatalogCarId", catalogCarId) :
                new ObjectParameter("CatalogCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputOneCar_Result>("[CarRentalSalonEntities].[fc_OutputOneCar](@CatalogCarId)", catalogCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputOneClient")]
        public virtual IQueryable<fc_OutputOneClient_Result> fc_OutputOneClient(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputOneClient_Result>("[CarRentalSalonEntities].[fc_OutputOneClient](@ClientId)", clientIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputOneClientForRentalCar")]
        public virtual IQueryable<fc_OutputOneClientForRentalCar_Result> fc_OutputOneClientForRentalCar(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputOneClientForRentalCar_Result>("[CarRentalSalonEntities].[fc_OutputOneClientForRentalCar](@RentalCarId)", rentalCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputOneDrivers")]
        public virtual IQueryable<fc_OutputOneDrivers_Result> fc_OutputOneDrivers(Nullable<int> driverId)
        {
            var driverIdParameter = driverId.HasValue ?
                new ObjectParameter("DriverId", driverId) :
                new ObjectParameter("DriverId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputOneDrivers_Result>("[CarRentalSalonEntities].[fc_OutputOneDrivers](@DriverId)", driverIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputOneEmployee")]
        public virtual IQueryable<fc_OutputOneEmployee_Result> fc_OutputOneEmployee(Nullable<int> employeeId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputOneEmployee_Result>("[CarRentalSalonEntities].[fc_OutputOneEmployee](@EmployeeId)", employeeIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputOneFine")]
        public virtual IQueryable<fc_OutputOneFine_Result> fc_OutputOneFine(Nullable<int> fineId)
        {
            var fineIdParameter = fineId.HasValue ?
                new ObjectParameter("FineId", fineId) :
                new ObjectParameter("FineId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputOneFine_Result>("[CarRentalSalonEntities].[fc_OutputOneFine](@FineId)", fineIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputOneTypeCarDamage")]
        public virtual IQueryable<fc_OutputOneTypeCarDamage_Result> fc_OutputOneTypeCarDamage(Nullable<int> typeCarDamageId)
        {
            var typeCarDamageIdParameter = typeCarDamageId.HasValue ?
                new ObjectParameter("TypeCarDamageId", typeCarDamageId) :
                new ObjectParameter("TypeCarDamageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputOneTypeCarDamage_Result>("[CarRentalSalonEntities].[fc_OutputOneTypeCarDamage](@TypeCarDamageId)", typeCarDamageIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_OutputTypeCarDamageOnRentalCar")]
        public virtual IQueryable<fc_OutputTypeCarDamageOnRentalCar_Result> fc_OutputTypeCarDamageOnRentalCar(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_OutputTypeCarDamageOnRentalCar_Result>("[CarRentalSalonEntities].[fc_OutputTypeCarDamageOnRentalCar](@RentalCarId)", rentalCarIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_SearchAmountAdditionalServiceOrder")]
        public virtual IQueryable<fc_SearchAmountAdditionalServiceOrder_Result> fc_SearchAmountAdditionalServiceOrder(Nullable<int> additionalServiceId)
        {
            var additionalServiceIdParameter = additionalServiceId.HasValue ?
                new ObjectParameter("AdditionalServiceId", additionalServiceId) :
                new ObjectParameter("AdditionalServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_SearchAmountAdditionalServiceOrder_Result>("[CarRentalSalonEntities].[fc_SearchAmountAdditionalServiceOrder](@AdditionalServiceId)", additionalServiceIdParameter);
        }
    
        [DbFunction("CarRentalSalonEntities", "fc_SearchAmountTypeCarDamage")]
        public virtual IQueryable<fc_SearchAmountTypeCarDamage_Result> fc_SearchAmountTypeCarDamage(Nullable<int> typeCarDamageId)
        {
            var typeCarDamageIdParameter = typeCarDamageId.HasValue ?
                new ObjectParameter("TypeCarDamageId", typeCarDamageId) :
                new ObjectParameter("TypeCarDamageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fc_SearchAmountTypeCarDamage_Result>("[CarRentalSalonEntities].[fc_SearchAmountTypeCarDamage](@TypeCarDamageId)", typeCarDamageIdParameter);
        }
    
        public virtual int pc_AddAdditionalServicesOnOrder(string additionalServiceName)
        {
            var additionalServiceNameParameter = additionalServiceName != null ?
                new ObjectParameter("AdditionalServiceName", additionalServiceName) :
                new ObjectParameter("AdditionalServiceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_AddAdditionalServicesOnOrder", additionalServiceNameParameter);
        }
    
        public virtual int pc_AddCar(string catalogCarBrand, string catalogCarModel, Nullable<int> countryCarId, Nullable<int> catalogCarMileage, Nullable<int> catalogCarPricePerDay, Nullable<int> statusCatalogCarId, string catalogCarImage)
        {
            var catalogCarBrandParameter = catalogCarBrand != null ?
                new ObjectParameter("CatalogCarBrand", catalogCarBrand) :
                new ObjectParameter("CatalogCarBrand", typeof(string));
    
            var catalogCarModelParameter = catalogCarModel != null ?
                new ObjectParameter("CatalogCarModel", catalogCarModel) :
                new ObjectParameter("CatalogCarModel", typeof(string));
    
            var countryCarIdParameter = countryCarId.HasValue ?
                new ObjectParameter("CountryCarId", countryCarId) :
                new ObjectParameter("CountryCarId", typeof(int));
    
            var catalogCarMileageParameter = catalogCarMileage.HasValue ?
                new ObjectParameter("CatalogCarMileage", catalogCarMileage) :
                new ObjectParameter("CatalogCarMileage", typeof(int));
    
            var catalogCarPricePerDayParameter = catalogCarPricePerDay.HasValue ?
                new ObjectParameter("CatalogCarPricePerDay", catalogCarPricePerDay) :
                new ObjectParameter("CatalogCarPricePerDay", typeof(int));
    
            var statusCatalogCarIdParameter = statusCatalogCarId.HasValue ?
                new ObjectParameter("StatusCatalogCarId", statusCatalogCarId) :
                new ObjectParameter("StatusCatalogCarId", typeof(int));
    
            var catalogCarImageParameter = catalogCarImage != null ?
                new ObjectParameter("CatalogCarImage", catalogCarImage) :
                new ObjectParameter("CatalogCarImage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_AddCar", catalogCarBrandParameter, catalogCarModelParameter, countryCarIdParameter, catalogCarMileageParameter, catalogCarPricePerDayParameter, statusCatalogCarIdParameter, catalogCarImageParameter);
        }
    
        public virtual int pc_AddFine(Nullable<System.DateTime> date, Nullable<int> nameFineId, Nullable<int> price, string intruderFullName, string catalogCarBrand, string catalogCarModel)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var nameFineIdParameter = nameFineId.HasValue ?
                new ObjectParameter("NameFineId", nameFineId) :
                new ObjectParameter("NameFineId", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var intruderFullNameParameter = intruderFullName != null ?
                new ObjectParameter("IntruderFullName", intruderFullName) :
                new ObjectParameter("IntruderFullName", typeof(string));
    
            var catalogCarBrandParameter = catalogCarBrand != null ?
                new ObjectParameter("CatalogCarBrand", catalogCarBrand) :
                new ObjectParameter("CatalogCarBrand", typeof(string));
    
            var catalogCarModelParameter = catalogCarModel != null ?
                new ObjectParameter("CatalogCarModel", catalogCarModel) :
                new ObjectParameter("CatalogCarModel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_AddFine", dateParameter, nameFineIdParameter, priceParameter, intruderFullNameParameter, catalogCarBrandParameter, catalogCarModelParameter);
        }
    
        public virtual int pc_AddNewCountry(string countryCarName)
        {
            var countryCarNameParameter = countryCarName != null ?
                new ObjectParameter("CountryCarName", countryCarName) :
                new ObjectParameter("CountryCarName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_AddNewCountry", countryCarNameParameter);
        }
    
        public virtual int pc_AddNewFineName(string nameFine)
        {
            var nameFineParameter = nameFine != null ?
                new ObjectParameter("NameFine", nameFine) :
                new ObjectParameter("NameFine", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_AddNewFineName", nameFineParameter);
        }
    
        public virtual int pc_AddRentalCar(Nullable<int> catalogCarId, Nullable<int> clientId, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateFinish, Nullable<int> fullPriceMain, Nullable<int> fullPriceAdditionalServices, Nullable<decimal> driverDriverLicenseNumber)
        {
            var catalogCarIdParameter = catalogCarId.HasValue ?
                new ObjectParameter("CatalogCarId", catalogCarId) :
                new ObjectParameter("CatalogCarId", typeof(int));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateFinishParameter = dateFinish.HasValue ?
                new ObjectParameter("DateFinish", dateFinish) :
                new ObjectParameter("DateFinish", typeof(System.DateTime));
    
            var fullPriceMainParameter = fullPriceMain.HasValue ?
                new ObjectParameter("FullPriceMain", fullPriceMain) :
                new ObjectParameter("FullPriceMain", typeof(int));
    
            var fullPriceAdditionalServicesParameter = fullPriceAdditionalServices.HasValue ?
                new ObjectParameter("FullPriceAdditionalServices", fullPriceAdditionalServices) :
                new ObjectParameter("FullPriceAdditionalServices", typeof(int));
    
            var driverDriverLicenseNumberParameter = driverDriverLicenseNumber.HasValue ?
                new ObjectParameter("DriverDriverLicenseNumber", driverDriverLicenseNumber) :
                new ObjectParameter("DriverDriverLicenseNumber", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_AddRentalCar", catalogCarIdParameter, clientIdParameter, dateStartParameter, dateFinishParameter, fullPriceMainParameter, fullPriceAdditionalServicesParameter, driverDriverLicenseNumberParameter);
        }
    
        public virtual int pc_AddTypeCarDamage(string typeCarDamageName, Nullable<int> typeCarDamagePrice)
        {
            var typeCarDamageNameParameter = typeCarDamageName != null ?
                new ObjectParameter("TypeCarDamageName", typeCarDamageName) :
                new ObjectParameter("TypeCarDamageName", typeof(string));
    
            var typeCarDamagePriceParameter = typeCarDamagePrice.HasValue ?
                new ObjectParameter("TypeCarDamagePrice", typeCarDamagePrice) :
                new ObjectParameter("TypeCarDamagePrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_AddTypeCarDamage", typeCarDamageNameParameter, typeCarDamagePriceParameter);
        }
    
        public virtual int pc_AddTypeCarDamageOnRentalCar(Nullable<int> rentalCarId, Nullable<int> typeCarDamageId, Nullable<int> returnCarHaveDamageAmount)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            var typeCarDamageIdParameter = typeCarDamageId.HasValue ?
                new ObjectParameter("TypeCarDamageId", typeCarDamageId) :
                new ObjectParameter("TypeCarDamageId", typeof(int));
    
            var returnCarHaveDamageAmountParameter = returnCarHaveDamageAmount.HasValue ?
                new ObjectParameter("ReturnCarHaveDamageAmount", returnCarHaveDamageAmount) :
                new ObjectParameter("ReturnCarHaveDamageAmount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_AddTypeCarDamageOnRentalCar", rentalCarIdParameter, typeCarDamageIdParameter, returnCarHaveDamageAmountParameter);
        }
    
        public virtual int pc_DeleteAdditionalService(Nullable<int> additionalServiceId)
        {
            var additionalServiceIdParameter = additionalServiceId.HasValue ?
                new ObjectParameter("AdditionalServiceId", additionalServiceId) :
                new ObjectParameter("AdditionalServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_DeleteAdditionalService", additionalServiceIdParameter);
        }
    
        public virtual int pc_DeleteAdditionalServicesHasOrderForUpdateRentalCar(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_DeleteAdditionalServicesHasOrderForUpdateRentalCar", rentalCarIdParameter);
        }
    
        public virtual int pc_DeleteCar(Nullable<int> catalogCarId)
        {
            var catalogCarIdParameter = catalogCarId.HasValue ?
                new ObjectParameter("CatalogCarId", catalogCarId) :
                new ObjectParameter("CatalogCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_DeleteCar", catalogCarIdParameter);
        }
    
        public virtual int pc_DeleteClient(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_DeleteClient", clientIdParameter);
        }
    
        public virtual int pc_DeleteDrivers(Nullable<int> driverId)
        {
            var driverIdParameter = driverId.HasValue ?
                new ObjectParameter("DriverId", driverId) :
                new ObjectParameter("DriverId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_DeleteDrivers", driverIdParameter);
        }
    
        public virtual int pc_DeleteEmployee(Nullable<int> employeeId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_DeleteEmployee", employeeIdParameter);
        }
    
        public virtual int pc_DeleteFine(Nullable<int> fineId)
        {
            var fineIdParameter = fineId.HasValue ?
                new ObjectParameter("FineId", fineId) :
                new ObjectParameter("FineId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_DeleteFine", fineIdParameter);
        }
    
        public virtual int pc_DeleteRentalCar(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_DeleteRentalCar", rentalCarIdParameter);
        }
    
        public virtual int pc_DeleteTypeCarDamage(Nullable<int> typeCarDamageId)
        {
            var typeCarDamageIdParameter = typeCarDamageId.HasValue ?
                new ObjectParameter("TypeCarDamageId", typeCarDamageId) :
                new ObjectParameter("TypeCarDamageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_DeleteTypeCarDamage", typeCarDamageIdParameter);
        }
    
        public virtual int pc_DeleteTypeCarDamageOnRentalCar(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_DeleteTypeCarDamageOnRentalCar", rentalCarIdParameter);
        }
    
        public virtual int pc_InsertAdditionalService(string additionalServiceName, Nullable<int> price)
        {
            var additionalServiceNameParameter = additionalServiceName != null ?
                new ObjectParameter("AdditionalServiceName", additionalServiceName) :
                new ObjectParameter("AdditionalServiceName", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_InsertAdditionalService", additionalServiceNameParameter, priceParameter);
        }
    
        public virtual ObjectResult<pc_OutputAdditionalServices_Result> pc_OutputAdditionalServices(string search, Nullable<int> typeSort)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputAdditionalServices_Result>("pc_OutputAdditionalServices", searchParameter, typeSortParameter);
        }
    
        public virtual ObjectResult<pc_OutputCarWithSort_Result> pc_OutputCarWithSort(string searchBrand, string searchModel, Nullable<int> typeSort, Nullable<int> typeCountry, string searchCountry)
        {
            var searchBrandParameter = searchBrand != null ?
                new ObjectParameter("SearchBrand", searchBrand) :
                new ObjectParameter("SearchBrand", typeof(string));
    
            var searchModelParameter = searchModel != null ?
                new ObjectParameter("SearchModel", searchModel) :
                new ObjectParameter("SearchModel", typeof(string));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            var typeCountryParameter = typeCountry.HasValue ?
                new ObjectParameter("TypeCountry", typeCountry) :
                new ObjectParameter("TypeCountry", typeof(int));
    
            var searchCountryParameter = searchCountry != null ?
                new ObjectParameter("SearchCountry", searchCountry) :
                new ObjectParameter("SearchCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputCarWithSort_Result>("pc_OutputCarWithSort", searchBrandParameter, searchModelParameter, typeSortParameter, typeCountryParameter, searchCountryParameter);
        }
    
        public virtual ObjectResult<pc_OutputCatalogWithSort_Result> pc_OutputCatalogWithSort(Nullable<int> fieldSort, Nullable<int> typeSort)
        {
            var fieldSortParameter = fieldSort.HasValue ?
                new ObjectParameter("FieldSort", fieldSort) :
                new ObjectParameter("FieldSort", typeof(int));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputCatalogWithSort_Result>("pc_OutputCatalogWithSort", fieldSortParameter, typeSortParameter);
        }
    
        public virtual ObjectResult<pc_OutputCatalogWithSortAndBrand_Result> pc_OutputCatalogWithSortAndBrand(Nullable<int> fieldSort, Nullable<int> typeSort, string search)
        {
            var fieldSortParameter = fieldSort.HasValue ?
                new ObjectParameter("FieldSort", fieldSort) :
                new ObjectParameter("FieldSort", typeof(int));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputCatalogWithSortAndBrand_Result>("pc_OutputCatalogWithSortAndBrand", fieldSortParameter, typeSortParameter, searchParameter);
        }
    
        public virtual ObjectResult<pc_OutputCatalogWithSortAndClass_Result> pc_OutputCatalogWithSortAndClass(Nullable<int> fieldSort, Nullable<int> typeSort, string search)
        {
            var fieldSortParameter = fieldSort.HasValue ?
                new ObjectParameter("FieldSort", fieldSort) :
                new ObjectParameter("FieldSort", typeof(int));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputCatalogWithSortAndClass_Result>("pc_OutputCatalogWithSortAndClass", fieldSortParameter, typeSortParameter, searchParameter);
        }
    
        public virtual ObjectResult<pc_OutputCatalogWithSortAndCountry_Result> pc_OutputCatalogWithSortAndCountry(Nullable<int> fieldSort, Nullable<int> typeSort, string search)
        {
            var fieldSortParameter = fieldSort.HasValue ?
                new ObjectParameter("FieldSort", fieldSort) :
                new ObjectParameter("FieldSort", typeof(int));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputCatalogWithSortAndCountry_Result>("pc_OutputCatalogWithSortAndCountry", fieldSortParameter, typeSortParameter, searchParameter);
        }
    
        public virtual ObjectResult<pc_OutputCatalogWithSortAndModel_Result> pc_OutputCatalogWithSortAndModel(Nullable<int> fieldSort, Nullable<int> typeSort, string search)
        {
            var fieldSortParameter = fieldSort.HasValue ?
                new ObjectParameter("FieldSort", fieldSort) :
                new ObjectParameter("FieldSort", typeof(int));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputCatalogWithSortAndModel_Result>("pc_OutputCatalogWithSortAndModel", fieldSortParameter, typeSortParameter, searchParameter);
        }
    
        public virtual ObjectResult<pc_OutputCatalogWithSortAndStatus_Result> pc_OutputCatalogWithSortAndStatus(Nullable<int> fieldSort, Nullable<int> typeSort, Nullable<int> search)
        {
            var fieldSortParameter = fieldSort.HasValue ?
                new ObjectParameter("FieldSort", fieldSort) :
                new ObjectParameter("FieldSort", typeof(int));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            var searchParameter = search.HasValue ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputCatalogWithSortAndStatus_Result>("pc_OutputCatalogWithSortAndStatus", fieldSortParameter, typeSortParameter, searchParameter);
        }
    
        public virtual ObjectResult<pc_OutputDrivers_Result> pc_OutputDrivers(string search, Nullable<int> typeSort, Nullable<System.DateTime> dateNow)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            var dateNowParameter = dateNow.HasValue ?
                new ObjectParameter("DateNow", dateNow) :
                new ObjectParameter("DateNow", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputDrivers_Result>("pc_OutputDrivers", searchParameter, typeSortParameter, dateNowParameter);
        }
    
        public virtual ObjectResult<pc_OutputFines_Result> pc_OutputFines(string search, Nullable<int> typeSort)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputFines_Result>("pc_OutputFines", searchParameter, typeSortParameter);
        }
    
        public virtual ObjectResult<pc_OutputFinesWithDate_Result> pc_OutputFinesWithDate(string search, Nullable<int> typeSort, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateFinish)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateFinishParameter = dateFinish.HasValue ?
                new ObjectParameter("DateFinish", dateFinish) :
                new ObjectParameter("DateFinish", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputFinesWithDate_Result>("pc_OutputFinesWithDate", searchParameter, typeSortParameter, dateStartParameter, dateFinishParameter);
        }
    
        public virtual ObjectResult<pc_OutputRentalCarWithDate_Result> pc_OutputRentalCarWithDate(string searchBrand, string searchModel, string clientFullName, Nullable<int> typeSort, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateFinish)
        {
            var searchBrandParameter = searchBrand != null ?
                new ObjectParameter("SearchBrand", searchBrand) :
                new ObjectParameter("SearchBrand", typeof(string));
    
            var searchModelParameter = searchModel != null ?
                new ObjectParameter("SearchModel", searchModel) :
                new ObjectParameter("SearchModel", typeof(string));
    
            var clientFullNameParameter = clientFullName != null ?
                new ObjectParameter("ClientFullName", clientFullName) :
                new ObjectParameter("ClientFullName", typeof(string));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateFinishParameter = dateFinish.HasValue ?
                new ObjectParameter("DateFinish", dateFinish) :
                new ObjectParameter("DateFinish", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputRentalCarWithDate_Result>("pc_OutputRentalCarWithDate", searchBrandParameter, searchModelParameter, clientFullNameParameter, typeSortParameter, dateStartParameter, dateFinishParameter);
        }
    
        public virtual ObjectResult<pc_OutputRentalCarWithoutDate_Result> pc_OutputRentalCarWithoutDate(string searchBrand, string searchModel, string clientFullName, Nullable<int> typeSort)
        {
            var searchBrandParameter = searchBrand != null ?
                new ObjectParameter("SearchBrand", searchBrand) :
                new ObjectParameter("SearchBrand", typeof(string));
    
            var searchModelParameter = searchModel != null ?
                new ObjectParameter("SearchModel", searchModel) :
                new ObjectParameter("SearchModel", typeof(string));
    
            var clientFullNameParameter = clientFullName != null ?
                new ObjectParameter("ClientFullName", clientFullName) :
                new ObjectParameter("ClientFullName", typeof(string));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputRentalCarWithoutDate_Result>("pc_OutputRentalCarWithoutDate", searchBrandParameter, searchModelParameter, clientFullNameParameter, typeSortParameter);
        }
    
        public virtual ObjectResult<pc_OutputTypeCarDamage_Result> pc_OutputTypeCarDamage(string search, Nullable<int> typeSort)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var typeSortParameter = typeSort.HasValue ?
                new ObjectParameter("TypeSort", typeSort) :
                new ObjectParameter("TypeSort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pc_OutputTypeCarDamage_Result>("pc_OutputTypeCarDamage", searchParameter, typeSortParameter);
        }
    
        public virtual int pc_RegistationDriver(string driverFullName, Nullable<decimal> driverDriverLicenseNumber, Nullable<int> pricePerDay, Nullable<System.TimeSpan> driverWorkBegin, Nullable<System.TimeSpan> driverWorkEnd)
        {
            var driverFullNameParameter = driverFullName != null ?
                new ObjectParameter("DriverFullName", driverFullName) :
                new ObjectParameter("DriverFullName", typeof(string));
    
            var driverDriverLicenseNumberParameter = driverDriverLicenseNumber.HasValue ?
                new ObjectParameter("DriverDriverLicenseNumber", driverDriverLicenseNumber) :
                new ObjectParameter("DriverDriverLicenseNumber", typeof(decimal));
    
            var pricePerDayParameter = pricePerDay.HasValue ?
                new ObjectParameter("PricePerDay", pricePerDay) :
                new ObjectParameter("PricePerDay", typeof(int));
    
            var driverWorkBeginParameter = driverWorkBegin.HasValue ?
                new ObjectParameter("DriverWorkBegin", driverWorkBegin) :
                new ObjectParameter("DriverWorkBegin", typeof(System.TimeSpan));
    
            var driverWorkEndParameter = driverWorkEnd.HasValue ?
                new ObjectParameter("DriverWorkEnd", driverWorkEnd) :
                new ObjectParameter("DriverWorkEnd", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_RegistationDriver", driverFullNameParameter, driverDriverLicenseNumberParameter, pricePerDayParameter, driverWorkBeginParameter, driverWorkEndParameter);
        }
    
        public virtual int pc_RegistrationClient(string clientFullName, Nullable<System.DateTime> date, Nullable<decimal> clientPassportNumber, Nullable<bool> clientHaveDriverLicense, Nullable<decimal> clientDriverLicenseNumber)
        {
            var clientFullNameParameter = clientFullName != null ?
                new ObjectParameter("ClientFullName", clientFullName) :
                new ObjectParameter("ClientFullName", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var clientPassportNumberParameter = clientPassportNumber.HasValue ?
                new ObjectParameter("ClientPassportNumber", clientPassportNumber) :
                new ObjectParameter("ClientPassportNumber", typeof(decimal));
    
            var clientHaveDriverLicenseParameter = clientHaveDriverLicense.HasValue ?
                new ObjectParameter("ClientHaveDriverLicense", clientHaveDriverLicense) :
                new ObjectParameter("ClientHaveDriverLicense", typeof(bool));
    
            var clientDriverLicenseNumberParameter = clientDriverLicenseNumber.HasValue ?
                new ObjectParameter("ClientDriverLicenseNumber", clientDriverLicenseNumber) :
                new ObjectParameter("ClientDriverLicenseNumber", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_RegistrationClient", clientFullNameParameter, dateParameter, clientPassportNumberParameter, clientHaveDriverLicenseParameter, clientDriverLicenseNumberParameter);
        }
    
        public virtual int pc_RegistrationEmployee(string employeeFullName, Nullable<System.DateTime> employeeBirthday, string userLogin, string userPassword, string userPhone, Nullable<int> roleId)
        {
            var employeeFullNameParameter = employeeFullName != null ?
                new ObjectParameter("EmployeeFullName", employeeFullName) :
                new ObjectParameter("EmployeeFullName", typeof(string));
    
            var employeeBirthdayParameter = employeeBirthday.HasValue ?
                new ObjectParameter("EmployeeBirthday", employeeBirthday) :
                new ObjectParameter("EmployeeBirthday", typeof(System.DateTime));
    
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var userPhoneParameter = userPhone != null ?
                new ObjectParameter("UserPhone", userPhone) :
                new ObjectParameter("UserPhone", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_RegistrationEmployee", employeeFullNameParameter, employeeBirthdayParameter, userLoginParameter, userPasswordParameter, userPhoneParameter, roleIdParameter);
        }
    
        public virtual int pc_UpdateAdditionalService(Nullable<int> additionalServiceId, string additionalServiceName, Nullable<int> price)
        {
            var additionalServiceIdParameter = additionalServiceId.HasValue ?
                new ObjectParameter("AdditionalServiceId", additionalServiceId) :
                new ObjectParameter("AdditionalServiceId", typeof(int));
    
            var additionalServiceNameParameter = additionalServiceName != null ?
                new ObjectParameter("AdditionalServiceName", additionalServiceName) :
                new ObjectParameter("AdditionalServiceName", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateAdditionalService", additionalServiceIdParameter, additionalServiceNameParameter, priceParameter);
        }
    
        public virtual int pc_UpdateCar(Nullable<int> catalogCarId, string catalogCarBrand, string catalogCarModel, Nullable<int> countryCarId, Nullable<int> catalogCarMileage, Nullable<int> catalogCarPricePerDay, Nullable<int> statusCatalogCarId, string catalogCarImage)
        {
            var catalogCarIdParameter = catalogCarId.HasValue ?
                new ObjectParameter("CatalogCarId", catalogCarId) :
                new ObjectParameter("CatalogCarId", typeof(int));
    
            var catalogCarBrandParameter = catalogCarBrand != null ?
                new ObjectParameter("CatalogCarBrand", catalogCarBrand) :
                new ObjectParameter("CatalogCarBrand", typeof(string));
    
            var catalogCarModelParameter = catalogCarModel != null ?
                new ObjectParameter("CatalogCarModel", catalogCarModel) :
                new ObjectParameter("CatalogCarModel", typeof(string));
    
            var countryCarIdParameter = countryCarId.HasValue ?
                new ObjectParameter("CountryCarId", countryCarId) :
                new ObjectParameter("CountryCarId", typeof(int));
    
            var catalogCarMileageParameter = catalogCarMileage.HasValue ?
                new ObjectParameter("CatalogCarMileage", catalogCarMileage) :
                new ObjectParameter("CatalogCarMileage", typeof(int));
    
            var catalogCarPricePerDayParameter = catalogCarPricePerDay.HasValue ?
                new ObjectParameter("CatalogCarPricePerDay", catalogCarPricePerDay) :
                new ObjectParameter("CatalogCarPricePerDay", typeof(int));
    
            var statusCatalogCarIdParameter = statusCatalogCarId.HasValue ?
                new ObjectParameter("StatusCatalogCarId", statusCatalogCarId) :
                new ObjectParameter("StatusCatalogCarId", typeof(int));
    
            var catalogCarImageParameter = catalogCarImage != null ?
                new ObjectParameter("CatalogCarImage", catalogCarImage) :
                new ObjectParameter("CatalogCarImage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateCar", catalogCarIdParameter, catalogCarBrandParameter, catalogCarModelParameter, countryCarIdParameter, catalogCarMileageParameter, catalogCarPricePerDayParameter, statusCatalogCarIdParameter, catalogCarImageParameter);
        }
    
        public virtual int pc_UpdateClient(Nullable<int> clientId, string clientFullName, Nullable<System.DateTime> date, Nullable<decimal> clientPassportNumber, Nullable<bool> clientHaveDriverLicense, Nullable<decimal> clientDriverLicenseNumber)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var clientFullNameParameter = clientFullName != null ?
                new ObjectParameter("ClientFullName", clientFullName) :
                new ObjectParameter("ClientFullName", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var clientPassportNumberParameter = clientPassportNumber.HasValue ?
                new ObjectParameter("ClientPassportNumber", clientPassportNumber) :
                new ObjectParameter("ClientPassportNumber", typeof(decimal));
    
            var clientHaveDriverLicenseParameter = clientHaveDriverLicense.HasValue ?
                new ObjectParameter("ClientHaveDriverLicense", clientHaveDriverLicense) :
                new ObjectParameter("ClientHaveDriverLicense", typeof(bool));
    
            var clientDriverLicenseNumberParameter = clientDriverLicenseNumber.HasValue ?
                new ObjectParameter("ClientDriverLicenseNumber", clientDriverLicenseNumber) :
                new ObjectParameter("ClientDriverLicenseNumber", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateClient", clientIdParameter, clientFullNameParameter, dateParameter, clientPassportNumberParameter, clientHaveDriverLicenseParameter, clientDriverLicenseNumberParameter);
        }
    
        public virtual int pc_UpdateDriver(string driverFullName, Nullable<decimal> driverDriverLicenseNumber, Nullable<int> pricePerDay, Nullable<int> driverId, Nullable<System.TimeSpan> driverWorkBegin, Nullable<System.TimeSpan> driverWorkEnd)
        {
            var driverFullNameParameter = driverFullName != null ?
                new ObjectParameter("DriverFullName", driverFullName) :
                new ObjectParameter("DriverFullName", typeof(string));
    
            var driverDriverLicenseNumberParameter = driverDriverLicenseNumber.HasValue ?
                new ObjectParameter("DriverDriverLicenseNumber", driverDriverLicenseNumber) :
                new ObjectParameter("DriverDriverLicenseNumber", typeof(decimal));
    
            var pricePerDayParameter = pricePerDay.HasValue ?
                new ObjectParameter("PricePerDay", pricePerDay) :
                new ObjectParameter("PricePerDay", typeof(int));
    
            var driverIdParameter = driverId.HasValue ?
                new ObjectParameter("DriverId", driverId) :
                new ObjectParameter("DriverId", typeof(int));
    
            var driverWorkBeginParameter = driverWorkBegin.HasValue ?
                new ObjectParameter("DriverWorkBegin", driverWorkBegin) :
                new ObjectParameter("DriverWorkBegin", typeof(System.TimeSpan));
    
            var driverWorkEndParameter = driverWorkEnd.HasValue ?
                new ObjectParameter("DriverWorkEnd", driverWorkEnd) :
                new ObjectParameter("DriverWorkEnd", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateDriver", driverFullNameParameter, driverDriverLicenseNumberParameter, pricePerDayParameter, driverIdParameter, driverWorkBeginParameter, driverWorkEndParameter);
        }
    
        public virtual int pc_UpdateEmployeeWithoutPassword(Nullable<int> employeeId, string employeeFullName, Nullable<System.DateTime> employeeBirthday, string userLogin, string userPhone, Nullable<int> roleId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var employeeFullNameParameter = employeeFullName != null ?
                new ObjectParameter("EmployeeFullName", employeeFullName) :
                new ObjectParameter("EmployeeFullName", typeof(string));
    
            var employeeBirthdayParameter = employeeBirthday.HasValue ?
                new ObjectParameter("EmployeeBirthday", employeeBirthday) :
                new ObjectParameter("EmployeeBirthday", typeof(System.DateTime));
    
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            var userPhoneParameter = userPhone != null ?
                new ObjectParameter("UserPhone", userPhone) :
                new ObjectParameter("UserPhone", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateEmployeeWithoutPassword", employeeIdParameter, employeeFullNameParameter, employeeBirthdayParameter, userLoginParameter, userPhoneParameter, roleIdParameter);
        }
    
        public virtual int pc_UpdateEmployeeWithPassword(Nullable<int> employeeId, string employeeFullName, Nullable<System.DateTime> employeeBirthday, string userLogin, string userPassword, string userPhone, Nullable<int> roleId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var employeeFullNameParameter = employeeFullName != null ?
                new ObjectParameter("EmployeeFullName", employeeFullName) :
                new ObjectParameter("EmployeeFullName", typeof(string));
    
            var employeeBirthdayParameter = employeeBirthday.HasValue ?
                new ObjectParameter("EmployeeBirthday", employeeBirthday) :
                new ObjectParameter("EmployeeBirthday", typeof(System.DateTime));
    
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var userPhoneParameter = userPhone != null ?
                new ObjectParameter("UserPhone", userPhone) :
                new ObjectParameter("UserPhone", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateEmployeeWithPassword", employeeIdParameter, employeeFullNameParameter, employeeBirthdayParameter, userLoginParameter, userPasswordParameter, userPhoneParameter, roleIdParameter);
        }
    
        public virtual int pc_UpdateFine(Nullable<int> fineId, Nullable<System.DateTime> date, Nullable<int> nameFineId, Nullable<int> price)
        {
            var fineIdParameter = fineId.HasValue ?
                new ObjectParameter("FineId", fineId) :
                new ObjectParameter("FineId", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var nameFineIdParameter = nameFineId.HasValue ?
                new ObjectParameter("NameFineId", nameFineId) :
                new ObjectParameter("NameFineId", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateFine", fineIdParameter, dateParameter, nameFineIdParameter, priceParameter);
        }
    
        public virtual int pc_UpdateRentalCarPaymentCancel(Nullable<int> rentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateRentalCarPaymentCancel", rentalCarIdParameter);
        }
    
        public virtual int pc_UpdateRentalCarStatusAdditionalPayment(Nullable<int> rentalCarId, Nullable<int> statusAdditionalPaymentRentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            var statusAdditionalPaymentRentalCarIdParameter = statusAdditionalPaymentRentalCarId.HasValue ?
                new ObjectParameter("StatusAdditionalPaymentRentalCarId", statusAdditionalPaymentRentalCarId) :
                new ObjectParameter("StatusAdditionalPaymentRentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateRentalCarStatusAdditionalPayment", rentalCarIdParameter, statusAdditionalPaymentRentalCarIdParameter);
        }
    
        public virtual int pc_UpdateRentalCarStatusRentalCar(Nullable<int> rentalCarId, Nullable<int> statusRentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            var statusRentalCarIdParameter = statusRentalCarId.HasValue ?
                new ObjectParameter("StatusRentalCarId", statusRentalCarId) :
                new ObjectParameter("StatusRentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateRentalCarStatusRentalCar", rentalCarIdParameter, statusRentalCarIdParameter);
        }
    
        public virtual int pc_UpdateRentalCarWithAdditionalPayment(Nullable<int> rentalCarId, Nullable<System.DateTime> rentalCarReturnDate, Nullable<int> rentalCarFullPriceNow, Nullable<int> additionalServicesOnOrderFullPriceOnOrder, Nullable<int> statusAdditionalPaymentRentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            var rentalCarReturnDateParameter = rentalCarReturnDate.HasValue ?
                new ObjectParameter("RentalCarReturnDate", rentalCarReturnDate) :
                new ObjectParameter("RentalCarReturnDate", typeof(System.DateTime));
    
            var rentalCarFullPriceNowParameter = rentalCarFullPriceNow.HasValue ?
                new ObjectParameter("RentalCarFullPriceNow", rentalCarFullPriceNow) :
                new ObjectParameter("RentalCarFullPriceNow", typeof(int));
    
            var additionalServicesOnOrderFullPriceOnOrderParameter = additionalServicesOnOrderFullPriceOnOrder.HasValue ?
                new ObjectParameter("AdditionalServicesOnOrderFullPriceOnOrder", additionalServicesOnOrderFullPriceOnOrder) :
                new ObjectParameter("AdditionalServicesOnOrderFullPriceOnOrder", typeof(int));
    
            var statusAdditionalPaymentRentalCarIdParameter = statusAdditionalPaymentRentalCarId.HasValue ?
                new ObjectParameter("StatusAdditionalPaymentRentalCarId", statusAdditionalPaymentRentalCarId) :
                new ObjectParameter("StatusAdditionalPaymentRentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateRentalCarWithAdditionalPayment", rentalCarIdParameter, rentalCarReturnDateParameter, rentalCarFullPriceNowParameter, additionalServicesOnOrderFullPriceOnOrderParameter, statusAdditionalPaymentRentalCarIdParameter);
        }
    
        public virtual int pc_UpdateRentalCarWithoutPay(Nullable<int> rentalCarId, Nullable<int> catalogCarId, Nullable<int> statusPaymentRentalCarId, Nullable<System.DateTime> rentalCarReturnDate, Nullable<decimal> driverDriverLicenseNumber, Nullable<int> fullPriceRentalCar, Nullable<int> fullPriceAdditionalServicesOnOrder)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            var catalogCarIdParameter = catalogCarId.HasValue ?
                new ObjectParameter("CatalogCarId", catalogCarId) :
                new ObjectParameter("CatalogCarId", typeof(int));
    
            var statusPaymentRentalCarIdParameter = statusPaymentRentalCarId.HasValue ?
                new ObjectParameter("StatusPaymentRentalCarId", statusPaymentRentalCarId) :
                new ObjectParameter("StatusPaymentRentalCarId", typeof(int));
    
            var rentalCarReturnDateParameter = rentalCarReturnDate.HasValue ?
                new ObjectParameter("RentalCarReturnDate", rentalCarReturnDate) :
                new ObjectParameter("RentalCarReturnDate", typeof(System.DateTime));
    
            var driverDriverLicenseNumberParameter = driverDriverLicenseNumber.HasValue ?
                new ObjectParameter("DriverDriverLicenseNumber", driverDriverLicenseNumber) :
                new ObjectParameter("DriverDriverLicenseNumber", typeof(decimal));
    
            var fullPriceRentalCarParameter = fullPriceRentalCar.HasValue ?
                new ObjectParameter("FullPriceRentalCar", fullPriceRentalCar) :
                new ObjectParameter("FullPriceRentalCar", typeof(int));
    
            var fullPriceAdditionalServicesOnOrderParameter = fullPriceAdditionalServicesOnOrder.HasValue ?
                new ObjectParameter("FullPriceAdditionalServicesOnOrder", fullPriceAdditionalServicesOnOrder) :
                new ObjectParameter("FullPriceAdditionalServicesOnOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateRentalCarWithoutPay", rentalCarIdParameter, catalogCarIdParameter, statusPaymentRentalCarIdParameter, rentalCarReturnDateParameter, driverDriverLicenseNumberParameter, fullPriceRentalCarParameter, fullPriceAdditionalServicesOnOrderParameter);
        }
    
        public virtual int pc_UpdateRentalCarWithPay(Nullable<int> rentalCarId, Nullable<System.DateTime> dateFinish, Nullable<int> fullPriceRentalCar, Nullable<int> fullPriceAdditionalServicesOnOrder, Nullable<int> statusAdditionalPaymentRentalCarId)
        {
            var rentalCarIdParameter = rentalCarId.HasValue ?
                new ObjectParameter("RentalCarId", rentalCarId) :
                new ObjectParameter("RentalCarId", typeof(int));
    
            var dateFinishParameter = dateFinish.HasValue ?
                new ObjectParameter("DateFinish", dateFinish) :
                new ObjectParameter("DateFinish", typeof(System.DateTime));
    
            var fullPriceRentalCarParameter = fullPriceRentalCar.HasValue ?
                new ObjectParameter("FullPriceRentalCar", fullPriceRentalCar) :
                new ObjectParameter("FullPriceRentalCar", typeof(int));
    
            var fullPriceAdditionalServicesOnOrderParameter = fullPriceAdditionalServicesOnOrder.HasValue ?
                new ObjectParameter("FullPriceAdditionalServicesOnOrder", fullPriceAdditionalServicesOnOrder) :
                new ObjectParameter("FullPriceAdditionalServicesOnOrder", typeof(int));
    
            var statusAdditionalPaymentRentalCarIdParameter = statusAdditionalPaymentRentalCarId.HasValue ?
                new ObjectParameter("StatusAdditionalPaymentRentalCarId", statusAdditionalPaymentRentalCarId) :
                new ObjectParameter("StatusAdditionalPaymentRentalCarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateRentalCarWithPay", rentalCarIdParameter, dateFinishParameter, fullPriceRentalCarParameter, fullPriceAdditionalServicesOnOrderParameter, statusAdditionalPaymentRentalCarIdParameter);
        }
    
        public virtual int pc_UpdateTypeCarDamage(Nullable<int> typeCarDamageId, string typeCarDamageName, Nullable<int> typeCarDamagePrice)
        {
            var typeCarDamageIdParameter = typeCarDamageId.HasValue ?
                new ObjectParameter("TypeCarDamageId", typeCarDamageId) :
                new ObjectParameter("TypeCarDamageId", typeof(int));
    
            var typeCarDamageNameParameter = typeCarDamageName != null ?
                new ObjectParameter("TypeCarDamageName", typeCarDamageName) :
                new ObjectParameter("TypeCarDamageName", typeof(string));
    
            var typeCarDamagePriceParameter = typeCarDamagePrice.HasValue ?
                new ObjectParameter("TypeCarDamagePrice", typeCarDamagePrice) :
                new ObjectParameter("TypeCarDamagePrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pc_UpdateTypeCarDamage", typeCarDamageIdParameter, typeCarDamageNameParameter, typeCarDamagePriceParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
